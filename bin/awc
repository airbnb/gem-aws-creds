#!/usr/bin/env ruby

require 'trollop'
require 'aws/creds'

parser = Trollop::Parser.new do
  banner 'AWS credentials exposer for command-line utilities'
  opt :list, 'List available credentials', :short => '-l'
  opt :verbose, 'Verbose (exposes secrets)', :short => '-v'
  opt :identity, 'Identity', :type => :string, :short => '-i'
  stop_on_unknown
end

opts = Trollop::with_standard_exception_handling parser do
  raise Trollop::HelpNeeded if ARGV.empty?
  parser.parse ARGV
end

def no_keytab path
  STDERR.puts <<-EOH
awc couldn't find a keytab at #{path}.

Please create one with something like:

default:AKIAIOSFODNNDEADBEEF:WT8ftNba7siVx5UOoGzJSyd82uNCZAC8LCllzcWp
admin:AKIAIOO432MG8BADF00D:T60q14wrbyxl3Ed13VOFA/2G+nvJR/jgHC42jIH1
EOH
  exit false
end

def list_keys store, verbose=false
  store.each do |name, creds|
    prefix = store.default?(name) ? '*' : ' '
    if verbose
      puts "#{prefix}#{name}\t#{creds.access_key_id}\t#{creds.secret_access_key}"
    else
      puts "#{prefix}#{name}"
    end
  end
end

# set all the environment variables that various AWS tools expect
def update_env_for creds
  %w[AWS_ACCESS_KEY AWSAccessKeyId AWS_ACCESS_KEY_ID].each do |var|
    ENV[var] = creds.access_key_id
  end

  %w[AWS_SECRET_KEY AWSSecretKey AWS_SECRET_ACCESS_KEY].each do |var|
    ENV[var] = creds.secret_access_key
  end
end

begin
  store = AWS::Creds::Store.new({:default => opts.identity})

  if opts.list
    list_keys store, opts.verbose
  else
    update_env_for store.default_keypair
    exec(*ARGV)
  end
rescue AWS::Creds::MissingKeyTab => e
  no_keytab e.path
end
